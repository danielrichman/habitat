Change pushing:
  - streamDataTo: synchronise or send data to another array
    e.g., keep a gmaps points array up to date by pushing new points into it
  - onDataChange: call a function when something's changed,
    passing the complete (new) array
    e.g., every time something changes delete the contents of a div and
    repopulate with the new contents
  - If change push targets are setup before init() is called then they receive
    data when it is ready. Otherwise, the new target will be initialised
    immediately.

HabitatDB(db_name) - Downloads and maintains the array of flights.
  .init() - connect, download, begin watching for changes.
  .onDataChange(fn)
  .streamDataTo(target)
  .reset() - clears all push targets, stops downloading data, frees.

Flight
  Object (i.e., {}) from couch (so, .start, .end, .payloads, etc.)
  .init() - downloads flight data. Uses changes stream from parent HabitatDB
            to watch for changes.
  .onDataChange(fn)
  .streamDataTo(target)
  .reset() - same as in HabitatDB

StreamTarget()
  GMaps-Array-like, with addition of init
  .init(array) (clear, then push all in array)
  .push(elem)
  .insert(id, elem)
  .remove(id)
  .set(id, elem)
  .clear()
